{
  "nav": {
    "skills": "skills",
    "experience": "experience",
    "projects": "projects"
  },
  "title": {
    "welcome": "Welcome to my Portfolio",
    "fullStack": "I 'm a Full Stack Developer",
    "cleanCode": "I ‚ù§ to Write Clean Code",
    "backend": "backend",
    "frontend": "frontend",
    "devOps": "dev ops"
  },
  "content": {
    "introduction": "I'm a self-taught full-stack and detailed-oriented engineer.<br>I like to solve problems by coding and keep on writing clean and stable code. <br/>I'm also an <1><2>Adventurer</2></1>, always curious about new technologies and willing to share.<br/>I'm sensitive to others' emotions, try to establish harmony, and minimize conflict."
  },
  "button": {
    "translation": "ZH",
    "downloadCV": "Download CV"
  },
  "milestone": {
    "5": {
      "jobTitle": "Backend Engineer",
      "company": "Ever Fortune. AI Co. Ltd.",
      "interval": "2021/01 - Now",
      "mainTask": "Data Engineering and Labeling Technology Applications.",
      "tasks": [
        "Familiar with search API with multiple queries based on <1>RESTful</1> designed, like aggregate function, having clause",
        "Implement the concept of microservices by <1>Docker</1> Compose, each project communicates via API gateway",
        "Connect Google OAuth 2.0 API for third-party login and <1>JWT</1> token for native login",
        "Using <1>Alembic</1> toolkit for auto-generating database migrations",
        "Realize the rollback of multiple data creation by <1>Redis</1> and sync primary key when sequence out of sync",
        "Infrastructure testing using <1>Pytest</1> before deployments"
      ]
    },
    "4": {
      "jobTitle": "Backend Engineer",
      "company": "Ever Fortune. AI Co. Ltd.",
      "interval": "2021/01 - Now",
      "mainTask": "Data Engineering and Labeling Technology Applications.",
      "tasks": [
        "Familiar with search API with multiple queries based on <1>RESTful</1> designed, like aggregate function, having clause",
        "Implement the concept of microservices by <1>Docker</1> Compose, each project communicates via API gateway",
        "Connect Google OAuth 2.0 API for third-party login and <1>JWT</1> token for native login",
        "Using <1>Alembic</1> toolkit for auto-generating database migrations",
        "Realize the rollback of multiple data creation by <1>Redis</1> and sync primary key when sequence out of sync",
        "Infrastructure testing using <1>Pytest</1> before deployments"
      ]
    }
  }
}
